{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/untimed_section.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UntimedSection = () => {\n  _s();\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({\n    emailType: '',\n    userTextResponse: ''\n  });\n  const [progress, setProgress] = useState(0);\n\n  // Fetch the first email when the component mounts\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n  const fetchNextEmail = () => {\n    // Fetch the next email from your database or API\n    // For example, using axios: axios.get('/api/next-email').then(response => setCurrentEmail(response.data));\n    axios.get('http://127.0.0.1:5000/api/next-email').then(response => {\n      console.log(response);\n      setCurrentEmail(response.data);\n    }).catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n  const handleResponse = (field, value) => {\n    setUserResponse({\n      ...userResponse,\n      [field]: value\n    });\n    // Optionally, you can also send this response to your database here\n  };\n  const handleNextEmail = () => {\n    // save the current response to the database\n    axios.post('http://127.0.0.1:5000/api/save-response', {\n      emailId: currentEmail === null || currentEmail === void 0 ? void 0 : currentEmail.id,\n      response: userResponse\n    }).then(() => {\n      fetchNextEmail();\n      setUserResponse({\n        emailType: ''\n      });\n    }).catch(error => {\n      console.error('Error saving response:', error);\n    });\n    setProgress(oldProgress => {\n      const newProgress = oldProgress + 10;\n      if (newProgress >= 100) {\n        return 100;\n      }\n      return newProgress;\n      console.log(newProgress);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      className: \"email-evaluation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phishing Email Evaluation Untimed Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-container\",\n        children: currentEmail ? currentEmail.content : 'Loading email...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"evaluation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: userResponse.emailType,\n            \"aria-label\": \"Select Email Type\",\n            onChange: e => handleResponse('emailType', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Phishing\",\n              children: \"Phishing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Real\",\n              children: \"Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userResponse.userTextResponse,\n            onChange: e => handleResponse('userTextResponse', e.target.value),\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Next Email\",\n        onClick: handleNextEmail,\n        children: \"Next Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(UntimedSection, \"J8uAkInPiWAGIz3StKKyL+VtnPU=\");\n_c = UntimedSection;\nexport default UntimedSection;\nvar _c;\n$RefreshReg$(_c, \"UntimedSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProgressBar","jsxDEV","_jsxDEV","UntimedSection","_s","currentEmail","setCurrentEmail","userResponse","setUserResponse","emailType","userTextResponse","progress","setProgress","fetchNextEmail","get","then","response","console","log","data","catch","error","handleResponse","field","value","handleNextEmail","post","emailId","id","oldProgress","newProgress","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","className","content","onChange","e","target","type","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/untimed_section.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\n\nconst UntimedSection = () => {\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({ emailType: '', userTextResponse: '' });\n  const [progress, setProgress] = useState(0);\n\n  // Fetch the first email when the component mounts\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n\n  const fetchNextEmail = () => {\n    // Fetch the next email from your database or API\n    // For example, using axios: axios.get('/api/next-email').then(response => setCurrentEmail(response.data));\n    axios.get('http://127.0.0.1:5000/api/next-email')\n      .then(response => {\n        console.log(response)\n        setCurrentEmail(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching email:', error);\n      });\n  };\n\n  const handleResponse = (field, value) => {\n    setUserResponse({ ...userResponse, [field]: value });\n    // Optionally, you can also send this response to your database here\n  };\n\n  const handleNextEmail = () => {\n    // save the current response to the database\n    axios.post('http://127.0.0.1:5000/api/save-response', { emailId: currentEmail?.id, response: userResponse })\n      .then(() => {\n        fetchNextEmail();\n        setUserResponse({ emailType: '' });\n      })\n      .catch(error => {\n        console.error('Error saving response:', error);\n      });\n\n    setProgress((oldProgress) => {\n      const newProgress = oldProgress + 10;\n      if (newProgress >= 100) {\n        return 100;\n      }\n      return newProgress;\n      console.log(newProgress);\n    });\n  };\n\n  return (\n    <div>\n      <ProgressBar progress={progress} />\n      <div style={{ position: 'relative' }} className=\"email-evaluation-container\">\n        <h1>Phishing Email Evaluation Untimed Section</h1>\n\n        <div className=\"email-container\">\n          {currentEmail ? currentEmail.content : 'Loading email...'}\n        </div>\n\n        <div className=\"evaluation-section\">\n          <div className=\"form-group\">\n            <label>Email Type:</label>\n            <select\n              value={userResponse.emailType}\n              aria-label=\"Select Email Type\"\n              onChange={e => handleResponse('emailType', e.target.value)}\n            >\n              <option value=\"\">Select...</option>\n              <option value=\"Phishing\">Phishing</option>\n              <option value=\"Real\">Real</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n          </div>\n          <div className=\"form-group\">\n            <label>Your Response:</label>\n            <input\n              type=\"text\"\n              value={userResponse.userTextResponse}\n              onChange={e => handleResponse('userTextResponse', e.target.value)}\n              rows=\"4\"\n            />\n\n          </div>\n        </div>\n        <button aria-label=\"Next Email\" onClick={handleNextEmail}>Next Email</button>\n      </div>\n      </div>\n  );\n};\n\nexport default UntimedSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}