{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// const Timer = ({ initialMinute = 1, size = 80, strokeWidth = 4 }) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  initialMinute = 1,\n  width = 300,\n  height = 20,\n  strokeWidth = 4,\n  onTimerEnd\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(initialMinute * 60);\n  // const radius = (size - strokeWidth) / 2;\n  // const circumference = radius * 2 * Math.PI;\n  // const offset = circumference - (seconds / (initialMinute * 60)) * circumference;\n  const fullWidth = width - strokeWidth * 2; // Adjust the width for the stroke\n  const progressWidth = seconds / (initialMinute * 60) * fullWidth;\n  useEffect(() => {\n    if (seconds > 0) {\n      const timerId = setTimeout(() => setSeconds(seconds - 1), 1000);\n      return () => clearTimeout(timerId);\n    } else {\n      if (onTimerEnd) {\n        onTimerEnd(); // Call the callback function if it is defined\n      }\n    }\n  }, [seconds, onTimerEnd]);\n  return (\n    /*#__PURE__*/\n    // <div style={{ position: 'relative', width: size, height: size }}>\n    //   <svg width={size} height={size}>\n    //     <circle\n    //       stroke=\"gray\"\n    //       fill=\"transparent\"\n    //       strokeWidth={strokeWidth}\n    //       strokeDasharray={circumference + ' ' + circumference}\n    //       style={{ strokeDashoffset: offset }}\n    //       r={radius}\n    //       cx={size / 2}\n    //       cy={size / 2}\n    //     />\n    //   </svg>\n    _jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: width,\n        height: height,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#f0f0f0',\n        borderRadius: '5px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100%',\n          width: `${progressWidth}px`,\n          background: '#6699CC',\n          transition: 'width 1s linear',\n          willChange: 'width',\n          position: 'absolute',\n          // Make the div positioned absolutely\n          right: 0 // Align the progress bar to the right\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          zIndex: 2,\n          color: 'black',\n          fontSize: '1em',\n          fontFamily: 'Arial, sans-serif',\n          fontWeight: 'bold',\n          position: 'relative' // Ensure text is positioned above the progress bar\n        },\n        children: [Math.floor(seconds / 60), \":\", String(seconds % 60).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Timer, \"f2DOpa59fkcjHmAiZy7w3urYoIQ=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","initialMinute","width","height","strokeWidth","onTimerEnd","_s","seconds","setSeconds","fullWidth","progressWidth","timerId","setTimeout","clearTimeout","style","position","display","alignItems","justifyContent","background","borderRadius","boxShadow","overflow","children","transition","willChange","right","fileName","_jsxFileName","lineNumber","columnNumber","zIndex","color","fontSize","fontFamily","fontWeight","Math","floor","String","padStart","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// const Timer = ({ initialMinute = 1, size = 80, strokeWidth = 4 }) => {\nconst Timer = ({ initialMinute = 1, width = 300, height = 20, strokeWidth = 4, onTimerEnd}) => {\n  const [seconds, setSeconds] = useState(initialMinute * 60);\n  // const radius = (size - strokeWidth) / 2;\n  // const circumference = radius * 2 * Math.PI;\n  // const offset = circumference - (seconds / (initialMinute * 60)) * circumference;\n  const fullWidth = width - strokeWidth * 2; // Adjust the width for the stroke\n  const progressWidth = (seconds / (initialMinute * 60)) * fullWidth;\n\n  useEffect(() => {\n    if (seconds > 0) {\n      const timerId = setTimeout(() => setSeconds(seconds - 1), 1000);\n      return () => clearTimeout(timerId);\n    }\n    else {\n    if (onTimerEnd) {\n      onTimerEnd(); // Call the callback function if it is defined\n      }\n    }\n  }, [seconds, onTimerEnd]);\n\n  return (\n    // <div style={{ position: 'relative', width: size, height: size }}>\n    //   <svg width={size} height={size}>\n    //     <circle\n    //       stroke=\"gray\"\n    //       fill=\"transparent\"\n    //       strokeWidth={strokeWidth}\n    //       strokeDasharray={circumference + ' ' + circumference}\n    //       style={{ strokeDashoffset: offset }}\n    //       r={radius}\n    //       cx={size / 2}\n    //       cy={size / 2}\n    //     />\n    //   </svg>\n    <div style={{\n      position: 'relative',\n      width: width,\n      height: height,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: '#f0f0f0',\n      borderRadius: '5px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      overflow: 'hidden'\n    }}>\n      <div style={{\n        height: '100%',\n        width: `${progressWidth}px`,\n        background: '#6699CC',\n        transition: 'width 1s linear',\n        willChange: 'width',\n        position: 'absolute', // Make the div positioned absolutely\n        right: 0, // Align the progress bar to the right\n      }}></div>\n      <span style={{\n        zIndex: 2,\n        color: 'black',\n        fontSize: '1em',\n        fontFamily: 'Arial, sans-serif',\n        fontWeight: 'bold',\n        position: 'relative', // Ensure text is positioned above the progress bar\n      }}>\n        {Math.floor(seconds / 60)}:{String(seconds % 60).padStart(2, '0')}\n        </span>\n      </div>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,aAAa,GAAG,CAAC;EAAEC,KAAK,GAAG,GAAG;EAAEC,MAAM,GAAG,EAAE;EAAEC,WAAW,GAAG,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC7F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACK,aAAa,GAAG,EAAE,CAAC;EAC1D;EACA;EACA;EACA,MAAMQ,SAAS,GAAGP,KAAK,GAAGE,WAAW,GAAG,CAAC,CAAC,CAAC;EAC3C,MAAMM,aAAa,GAAIH,OAAO,IAAIN,aAAa,GAAG,EAAE,CAAC,GAAIQ,SAAS;EAElEZ,SAAS,CAAC,MAAM;IACd,IAAIU,OAAO,GAAG,CAAC,EAAE;MACf,MAAMI,OAAO,GAAGC,UAAU,CAAC,MAAMJ,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MAC/D,OAAO,MAAMM,YAAY,CAACF,OAAO,CAAC;IACpC,CAAC,MACI;MACL,IAAIN,UAAU,EAAE;QACdA,UAAU,CAAC,CAAC,CAAC,CAAC;MACd;IACF;EACF,CAAC,EAAE,CAACE,OAAO,EAAEF,UAAU,CAAC,CAAC;EAEzB;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAN,OAAA;MAAKe,KAAK,EAAE;QACVC,QAAQ,EAAE,UAAU;QACpBb,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA,MAAM;QACda,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,SAAS;QACrBC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,8BAA8B;QACzCC,QAAQ,EAAE;MACZ,CAAE;MAAAC,QAAA,gBACAxB,OAAA;QAAKe,KAAK,EAAE;UACVX,MAAM,EAAE,MAAM;UACdD,KAAK,EAAG,GAAEQ,aAAc,IAAG;UAC3BS,UAAU,EAAE,SAAS;UACrBK,UAAU,EAAE,iBAAiB;UAC7BC,UAAU,EAAE,OAAO;UACnBV,QAAQ,EAAE,UAAU;UAAE;UACtBW,KAAK,EAAE,CAAC,CAAE;QACZ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACT/B,OAAA;QAAMe,KAAK,EAAE;UACXiB,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,OAAO;UACdC,QAAQ,EAAE,KAAK;UACfC,UAAU,EAAE,mBAAmB;UAC/BC,UAAU,EAAE,MAAM;UAClBpB,QAAQ,EAAE,UAAU,CAAE;QACxB,CAAE;QAAAQ,QAAA,GACCa,IAAI,CAACC,KAAK,CAAC9B,OAAO,GAAG,EAAE,CAAC,EAAC,GAAC,EAAC+B,MAAM,CAAC/B,OAAO,GAAG,EAAE,CAAC,CAACgC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;AAEZ,CAAC;AAACxB,EAAA,CAnEIN,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAqEX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}