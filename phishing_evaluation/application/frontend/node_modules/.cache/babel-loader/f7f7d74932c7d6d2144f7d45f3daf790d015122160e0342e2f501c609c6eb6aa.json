{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/untimed_section.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UntimedSection = () => {\n  _s();\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({\n    type: '',\n    userTextResponse: ''\n  });\n  const [emailCount, setEmailCount] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n  const fetchNextEmail = () => {\n    axios.get('http://127.0.0.1:5000/api/next_email').then(response => {\n      console.log(response);\n      setCurrentEmail(response.data);\n      setStartTime(Date.now());\n    }).catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n  const handleResponse = (field, value) => {\n    const endTime = Date.now();\n    const elapsedTime = (endTime - startTime) / 1000;\n    setUserResponse({\n      ...userResponse,\n      [field]: value,\n      elapsedTime: elapsedTime\n    });\n  };\n  const handleNextEmail = () => {\n    axios.post('http://127.0.0.1:5000/api/save_response', {\n      emailId: currentEmail.email_id,\n      response: userResponse\n    }).then(() => {\n      fetchNextEmail();\n      setUserResponse({\n        type: ''\n      });\n    }).catch(error => {\n      console.error('Error saving response:', error);\n    });\n    setEmailCount(prevCount => {\n      const updatedCount = prevCount + 1;\n      if (updatedCount >= 5) {\n        navigate('/score');\n      }\n      return updatedCount;\n    });\n    setProgress(oldProgress => {\n      const newProgress = oldProgress + 10;\n      if (newProgress >= 100) {\n        return 100;\n      }\n      return newProgress;\n      console.log(newProgress);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      className: \"email-evaluation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phishing Email Evaluation Untimed Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-container\",\n        children: currentEmail ? currentEmail.content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)) : 'Loading email...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"evaluation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: userResponse.type,\n            \"aria-label\": \"Select Email Type\",\n            onChange: e => handleResponse('type', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Phishing\",\n              children: \"Phishing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Real\",\n              children: \"Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userResponse.userTextResponse,\n            onChange: e => handleResponse('userTextResponse', e.target.value),\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Next Email\",\n        onClick: handleNextEmail,\n        children: \"Next Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UntimedSection, \"veHiMJuw9aiqSBWB8LkYzZx0hd8=\", false, function () {\n  return [useNavigate];\n});\n_c = UntimedSection;\nexport default UntimedSection;\nvar _c;\n$RefreshReg$(_c, \"UntimedSection\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","ProgressBar","jsxDEV","_jsxDEV","UntimedSection","_s","currentEmail","setCurrentEmail","userResponse","setUserResponse","type","userTextResponse","emailCount","setEmailCount","startTime","setStartTime","Date","now","progress","setProgress","navigate","fetchNextEmail","get","then","response","console","log","data","catch","error","handleResponse","field","value","endTime","elapsedTime","handleNextEmail","post","emailId","email_id","prevCount","updatedCount","oldProgress","newProgress","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","className","content","split","map","line","index","Fragment","onChange","e","target","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/untimed_section.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\n\nconst UntimedSection = () => {\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({ type: '', userTextResponse: '' });\n  const [emailCount, setEmailCount] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now()); \n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n\n  const fetchNextEmail = () => {\n    axios.get('http://127.0.0.1:5000/api/next_email')\n    .then(response => {\n      console.log(response)\n      setCurrentEmail(response.data);\n      setStartTime(Date.now());\n    })\n    .catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n\n  const handleResponse = (field, value) => {\n    const endTime = Date.now(); \n    const elapsedTime = (endTime - startTime) / 1000; \n    setUserResponse({ ...userResponse, [field]: value , elapsedTime: elapsedTime });\n  };\n\n  const handleNextEmail = () => {\n    axios.post('http://127.0.0.1:5000/api/save_response', { emailId: currentEmail.email_id, response: userResponse })\n      .then(() => {\n        fetchNextEmail();\n        setUserResponse({type: '' });\n      })\n      .catch(error => {\n        console.error('Error saving response:', error);\n      });\n\n\n    setEmailCount(prevCount => {\n      const updatedCount = prevCount + 1;\n      if (updatedCount >= 5) {\n        navigate('/score'); \n      }\n      return updatedCount;\n    });\n\n    setProgress((oldProgress) => {\n      const newProgress = oldProgress + 10;\n      if (newProgress >= 100) {\n        return 100;\n      }\n      return newProgress;\n      console.log(newProgress);\n    });\n  };\n\n  return (\n    <div>\n    <ProgressBar progress={progress} />\n    <div style={{ position: 'relative' }} className=\"email-evaluation-container\">\n      <h1>Phishing Email Evaluation Untimed Section</h1>\n\n      <div className=\"email-container\">\n        {currentEmail ? \n          currentEmail.content.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              <br />\n            </React.Fragment>\n          ))\n          : 'Loading email...'}\n      </div>\n\n      <div className=\"evaluation-section\">\n         <div className=\"form-group\">\n            <label>Email Type:</label>\n            <select \n              value={userResponse.type} \n              aria-label=\"Select Email Type\" \n              onChange={e => handleResponse('type', e.target.value)}\n            >\n              <option value=\"\">Select...</option>\n              <option value=\"Phishing\">Phishing</option>\n              <option value=\"Real\">Real</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n        </div>\n        <div className=\"form-group\">\n            <label>Your Response:</label>\n            <input \n                type=\"text\" \n                value={userResponse.userTextResponse} \n                onChange={e => handleResponse('userTextResponse', e.target.value)}\n                rows=\"4\"\n            />\n\n    </div>\n      </div>\n      <button aria-label=\"Next Email\" onClick={handleNextEmail}>Next Email</button>\n    </div>\n    </div>\n  );\n};\n\nexport default UntimedSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}