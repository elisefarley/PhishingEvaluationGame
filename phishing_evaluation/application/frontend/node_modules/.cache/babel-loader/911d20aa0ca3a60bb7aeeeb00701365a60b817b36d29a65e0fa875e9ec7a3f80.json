{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/email_evaluation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Timer from './timer.js';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailEvaluation = () => {\n  _s();\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({\n    evaluatorType: '',\n    emailType: ''\n  });\n  const [progress, setProgress] = useState(0);\n\n  // Fetch the first email when the component mounts\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n  const fetchNextEmail = () => {\n    // Fetch the next email from your database or API\n    // For example, using axios: axios.get('/api/next-email').then(response => setCurrentEmail(response.data));\n    axios.get('http://127.0.0.1:5000/api/next-email').then(response => {\n      console.log(\"Received email data:\", response.data);\n      setCurrentEmail(response.data);\n    }).catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n  const handleResponse = (field, value) => {\n    setUserResponse({\n      ...userResponse,\n      [field]: value\n    });\n    // Optionally, you can also send this response to your database here\n  };\n  const handleNextEmail = () => {\n    // Save the current response to the database\n\n    //fetchNextEmail();\n\n    setProgress(oldProgress => {\n      const newProgress = oldProgress + 10;\n      if (newProgress >= 100) {\n        return 100;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      className: \"email-evaluation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phishing Email Evaluation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          right: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-container\",\n        children: currentEmail ? currentEmail.content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)) : 'Loading email...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"evaluation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Evaluator Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('evaluatorType', 'LLM'),\n            children: \"LLM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('evaluatorType', 'Human'),\n            children: \"Human\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Email Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('emailType', 'Phishing Email'),\n            children: \"Phishing Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('emailType', 'Real Email'),\n            children: \"Real Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextEmail,\n        children: \"Next Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailEvaluation, \"pJ06o/4fVwoWMmDZcpXMfKB8p6w=\");\n_c = EmailEvaluation;\nexport default EmailEvaluation;\nvar _c;\n$RefreshReg$(_c, \"EmailEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","Timer","axios","ProgressBar","jsxDEV","_jsxDEV","EmailEvaluation","_s","currentEmail","setCurrentEmail","userResponse","setUserResponse","evaluatorType","emailType","progress","setProgress","fetchNextEmail","get","then","response","console","log","data","catch","error","handleResponse","field","value","handleNextEmail","oldProgress","newProgress","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","className","top","right","content","split","map","line","index","Fragment","onClick","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/email_evaluation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Timer from './timer.js';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\n\nconst EmailEvaluation = () => {\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({ evaluatorType: '', emailType: '' });\n  const [progress, setProgress] = useState(0);\n\n  // Fetch the first email when the component mounts\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n\n  const fetchNextEmail = () => {\n    // Fetch the next email from your database or API\n    // For example, using axios: axios.get('/api/next-email').then(response => setCurrentEmail(response.data));\n    axios.get('http://127.0.0.1:5000/api/next-email')\n    .then(response => {\n      console.log(\"Received email data:\", response.data);\n      setCurrentEmail(response.data);\n    })\n    .catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n\n  const handleResponse = (field, value) => {\n    setUserResponse({ ...userResponse, [field]: value });\n    // Optionally, you can also send this response to your database here\n  };\n\n  const handleNextEmail = () => {\n    // Save the current response to the database\n   \n    //fetchNextEmail();\n\n        setProgress((oldProgress) => {\n          const newProgress = oldProgress + 10;\n          if (newProgress >= 100) {\n            return 100;\n          }\n        });\n  };\n\n  return (\n    <div><ProgressBar progress={progress} />\n    <div style={{ position: 'relative' }} className=\"email-evaluation-container\">\n      <h1>Phishing Email Evaluation</h1>\n      <div style={{ position: 'absolute', top: 0, right: 0 }}>\n        <Timer />\n      </div>\n      {/* <div className=\"email-container\">\n        {currentEmail ? currentEmail.content : 'Loading email...'}\n      </div> */}\n      <div className=\"email-container\">\n        {currentEmail ? \n          currentEmail.content.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              <br />\n            </React.Fragment>\n          ))\n          : 'Loading email...'}\n      </div>\n      <div className=\"evaluation-section\">\n        <div className=\"column\">\n          <h3>Evaluator Type</h3>\n          <button onClick={() => handleResponse('evaluatorType', 'LLM')}>LLM</button>\n          <button onClick={() => handleResponse('evaluatorType', 'Human')}>Human</button>\n        </div>\n        <div className=\"column\">\n          <h3>Email Type</h3>\n          <button onClick={() => handleResponse('emailType', 'Phishing Email')}>Phishing Email</button>\n          <button onClick={() => handleResponse('emailType', 'Real Email')}>Real Email</button>\n        </div>\n      </div>\n      <button onClick={handleNextEmail}>Next Email</button>\n    </div>\n    </div>\n  );\n};\n\nexport default EmailEvaluation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}