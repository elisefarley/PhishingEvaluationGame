{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  initialMinute = 1,\n  size = 80,\n  strokeWidth = 4\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(initialMinute * 60);\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const offset = circumference - seconds / (initialMinute * 60) * circumference;\n  useEffect(() => {\n    if (seconds > 0) {\n      const timerId = setTimeout(() => setSeconds(seconds - 1), 1000);\n      return () => clearTimeout(timerId);\n    }\n  }, [seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: size,\n      height: size\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: size,\n      height: size,\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"gray\",\n        fill: \"transparent\",\n        strokeWidth: strokeWidth,\n        strokeDasharray: circumference + ' ' + circumference,\n        style: {\n          strokeDashoffset: offset\n        },\n        r: radius,\n        cx: size / 2,\n        cy: size / 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        fontSize: '1em'\n      },\n      children: [Math.floor(seconds / 60), \":\", String(seconds % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"f2DOpa59fkcjHmAiZy7w3urYoIQ=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","initialMinute","size","strokeWidth","_s","seconds","setSeconds","radius","circumference","Math","PI","offset","timerId","setTimeout","clearTimeout","style","position","width","height","children","stroke","fill","strokeDasharray","strokeDashoffset","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","floor","String","padStart","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Timer = ({ initialMinute = 1, size = 80, strokeWidth = 4 }) => {\n  const [seconds, setSeconds] = useState(initialMinute * 60);\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const offset = circumference - (seconds / (initialMinute * 60)) * circumference;\n\n  useEffect(() => {\n    if (seconds > 0) {\n      const timerId = setTimeout(() => setSeconds(seconds - 1), 1000);\n      return () => clearTimeout(timerId);\n    }\n  }, [seconds]);\n\n  return (\n    <div style={{ position: 'relative', width: size, height: size }}>\n      <svg width={size} height={size}>\n        <circle\n          stroke=\"gray\"\n          fill=\"transparent\"\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference + ' ' + circumference}\n          style={{ strokeDashoffset: offset }}\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n      </svg>\n      <div style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        fontSize: '1em'\n      }}>\n        {Math.floor(seconds / 60)}:{String(seconds % 60).padStart(2, '0')}\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC,aAAa,GAAG,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,WAAW,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACK,aAAa,GAAG,EAAE,CAAC;EAC1D,MAAMM,MAAM,GAAG,CAACL,IAAI,GAAGC,WAAW,IAAI,CAAC;EACvC,MAAMK,aAAa,GAAGD,MAAM,GAAG,CAAC,GAAGE,IAAI,CAACC,EAAE;EAC1C,MAAMC,MAAM,GAAGH,aAAa,GAAIH,OAAO,IAAIJ,aAAa,GAAG,EAAE,CAAC,GAAIO,aAAa;EAE/EX,SAAS,CAAC,MAAM;IACd,IAAIQ,OAAO,GAAG,CAAC,EAAE;MACf,MAAMO,OAAO,GAAGC,UAAU,CAAC,MAAMP,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MAC/D,OAAO,MAAMS,YAAY,CAACF,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,oBACEN,OAAA;IAAKgB,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAEf,IAAI;MAAEgB,MAAM,EAAEhB;IAAK,CAAE;IAAAiB,QAAA,gBAC9DpB,OAAA;MAAKkB,KAAK,EAAEf,IAAK;MAACgB,MAAM,EAAEhB,IAAK;MAAAiB,QAAA,eAC7BpB,OAAA;QACEqB,MAAM,EAAC,MAAM;QACbC,IAAI,EAAC,aAAa;QAClBlB,WAAW,EAAEA,WAAY;QACzBmB,eAAe,EAAEd,aAAa,GAAG,GAAG,GAAGA,aAAc;QACrDO,KAAK,EAAE;UAAEQ,gBAAgB,EAAEZ;QAAO,CAAE;QACpCa,CAAC,EAAEjB,MAAO;QACVkB,EAAE,EAAEvB,IAAI,GAAG,CAAE;QACbwB,EAAE,EAAExB,IAAI,GAAG;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MAAKgB,KAAK,EAAE;QACVC,QAAQ,EAAE,UAAU;QACpBe,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCC,QAAQ,EAAE;MACZ,CAAE;MAAAf,QAAA,GACCV,IAAI,CAAC0B,KAAK,CAAC9B,OAAO,GAAG,EAAE,CAAC,EAAC,GAAC,EAAC+B,MAAM,CAAC/B,OAAO,GAAG,EAAE,CAAC,CAACgC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCIJ,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}