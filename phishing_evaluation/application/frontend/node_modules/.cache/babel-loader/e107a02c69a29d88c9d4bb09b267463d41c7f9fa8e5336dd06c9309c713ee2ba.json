{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/email_evaluation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Timer from './timer.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailEvaluation = () => {\n  _s();\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({\n    source: '',\n    type: ''\n  });\n  const [emailCount, setEmailCount] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (emailCount < 10) {\n      fetchNextEmail();\n    } else {\n      // After 10 emails have been evaluated, navigate to the untimed_section\n      navigate('/untimed_section');\n    }\n  }, [emailCount, navigate]); // Depend on emailCount to trigger the effect\n\n  const handleTimerEnd = () => {\n    setEmailCount(count => count + 1);\n  };\n  const fetchNextEmail = () => {\n    axios.get('http://127.0.0.1:5000/api/next_email').then(response => {\n      console.log(\"Received email data:\", response.data);\n      setCurrentEmail(response.data);\n      setStartTime(Date.now());\n    }).catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n  const handleResponse = (field, value, BtnID) => {\n    const endTime = Date.now(); // End time- when selection is made\n    const elapsedTime = (endTime - startTime) / 1000; // Elapsed time in seconds\n    setUserResponse({\n      ...userResponse,\n      [field]: value,\n      elapsedTime: elapsedTime\n    });\n    document.getElementById(BtnID).style.backgroundColor = '#2a5a9e'; // Change the color of the button when clicked\n  };\n  const handleNextEmail = () => {\n    if (!userResponse.source || !userResponse.type) {\n      alert(\"Please make a selection for both evaluator type and email type.\");\n      return; // Stop the function if either response is missing\n    }\n    axios.post('http://127.0.0.1:5000/api/save_response', {\n      emailId: currentEmail.email_id,\n      response: userResponse\n    }).then(() => {\n      setUserResponse({\n        source: '',\n        type: '',\n        elapsedTime: null\n      }); // Reset user responses for the next email\n      if (emailCount < 9) {\n        setEmailCount(current => current + 1); // Manually progress to the next email\n      } else {\n        navigate('/untimed_section'); // Navigate away after the last email\n      }\n    }).catch(error => {\n      console.error('Error saving response:', error);\n    });\n    const buttonIds = ['LLMBtn', 'HumanBtn', 'PhishBtn', 'RealBtn'];\n    buttonIds.forEach(buttonId => {\n      document.getElementById(buttonId).style.backgroundColor = '#ffffff'; // Reset to original color\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    className: \"email-evaluation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phishing Email Evaluation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        right: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Timer, {\n        initialMinute: 0.5,\n        onTimerEnd: handleTimerEnd,\n        width: 300,\n        height: 20,\n        strokeWidth: 4\n      }, emailCount, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-container\",\n      children: currentEmail ? currentEmail.content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : 'Loading email...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"evaluation-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Source Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"LLMBtn\",\n          onClick: () => handleResponse('source', 'LLM', 'LLMBtn'),\n          children: \"LLM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"HumanBtn\",\n          onClick: () => handleResponse('source', 'Human', 'HumanBtn'),\n          children: \"Human\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"PhishBtn\",\n          onClick: () => handleResponse('type', 'Phishing Email', 'PhishBtn'),\n          children: \"Phishing Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"RealBtn\",\n          onClick: () => handleResponse('type', 'Real Email', 'RealBtn'),\n          children: \"Real Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startEvaluationButton\",\n      onClick: handleNextEmail,\n      children: \"Next Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailEvaluation, \"5WjKeGFiTjCQNkMu8ALsrumgwWI=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailEvaluation;\nexport default EmailEvaluation;\nvar _c;\n$RefreshReg$(_c, \"EmailEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Timer","axios","jsxDEV","_jsxDEV","EmailEvaluation","_s","currentEmail","setCurrentEmail","userResponse","setUserResponse","source","type","emailCount","setEmailCount","startTime","setStartTime","navigate","fetchNextEmail","handleTimerEnd","count","get","then","response","console","log","data","Date","now","catch","error","handleResponse","field","value","BtnID","endTime","elapsedTime","document","getElementById","style","backgroundColor","handleNextEmail","alert","post","emailId","email_id","current","buttonIds","forEach","buttonId","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","top","right","initialMinute","onTimerEnd","width","height","strokeWidth","content","split","map","line","index","Fragment","id","onClick","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/email_evaluation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Timer from './timer.js';\nimport axios from 'axios';\n\nconst EmailEvaluation = () => {\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({ source: '', type: '' });\n  const [emailCount, setEmailCount] = useState(0); \n  const [startTime, setStartTime] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (emailCount < 10) {\n      fetchNextEmail();\n    } else {\n      // After 10 emails have been evaluated, navigate to the untimed_section\n      navigate('/untimed_section');\n    }\n  }, [emailCount, navigate]); // Depend on emailCount to trigger the effect\n\n  const handleTimerEnd = () => {\n    setEmailCount(count => count + 1);\n  };\n\n  const fetchNextEmail = () => {\n    axios.get('http://127.0.0.1:5000/api/next_email')\n    .then(response => {\n      console.log(\"Received email data:\", response.data);\n      setCurrentEmail(response.data);\n      setStartTime(Date.now());\n    })\n    .catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n\n  const handleResponse = (field, value, BtnID) => {\n    const endTime = Date.now(); // End time- when selection is made\n    const elapsedTime = (endTime - startTime) / 1000; // Elapsed time in seconds\n    setUserResponse({ ...userResponse, [field]: value, elapsedTime: elapsedTime });\n    document.getElementById(BtnID).style.backgroundColor = '#2a5a9e'; // Change the color of the button when clicked\n  };\n\n\n  const handleNextEmail = () => {\n    if (!userResponse.source || !userResponse.type) {\n      alert(\"Please make a selection for both evaluator type and email type.\");\n      return; // Stop the function if either response is missing\n    }\n    axios.post('http://127.0.0.1:5000/api/save_response', {\n      emailId: currentEmail.email_id,\n      response: userResponse\n    })\n      .then(() => {\n        setUserResponse({ source: '', type: '', elapsedTime: null }); // Reset user responses for the next email\n        if (emailCount < 9) {\n          setEmailCount(current => current + 1); // Manually progress to the next email\n        } else {\n          navigate('/untimed_section'); // Navigate away after the last email\n        }\n      })\n      .catch(error => {\n        console.error('Error saving response:', error);\n      });\n\n      const buttonIds = ['LLMBtn', 'HumanBtn', 'PhishBtn', 'RealBtn'];\n      buttonIds.forEach(buttonId => {\n        document.getElementById(buttonId).style.backgroundColor = '#ffffff'; // Reset to original color\n  });\n\n  };\n  \n  return (\n    <div style={{ position: 'relative' }} className=\"email-evaluation-container\">\n      <h1>Phishing Email Evaluation</h1>\n      <div style={{ position: 'absolute', top: 0, right: 0 }}>\n        {/* <Timer /> */}\n        <Timer key={emailCount} initialMinute={0.5} onTimerEnd={handleTimerEnd} width={300} height={20} strokeWidth={4} />\n      </div>\n      {/* <div className=\"email-container\">\n        {currentEmail ? currentEmail.content : 'Loading email...'}\n      </div> */}\n      <div className=\"email-container\">\n        {currentEmail ? \n          currentEmail.content.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              <br />\n            </React.Fragment>\n          ))\n          : 'Loading email...'}\n      </div>\n      <div className=\"evaluation-section\">\n        <div className=\"column\">\n          <h3>Source Type</h3>\n          <button id=\"LLMBtn\" onClick={() => handleResponse('source', 'LLM', 'LLMBtn')}>LLM</button>\n          <button id=\"HumanBtn\" onClick={() => handleResponse('source', 'Human', 'HumanBtn')}>Human</button>\n        </div>\n        <div className=\"column\">\n          <h3>Email Type</h3>\n          <button id=\"PhishBtn\" onClick={() => handleResponse('type', 'Phishing Email', 'PhishBtn')}>Phishing Email</button>\n          <button id=\"RealBtn\" onClick={() => handleResponse('type', 'Real Email', 'RealBtn')}>Real Email</button>\n        </div>\n      </div>\n      <button className=\"startEvaluationButton\" onClick={handleNextEmail}>Next Email</button>\n    </div>\n  );\n};\n\nexport default EmailEvaluation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}