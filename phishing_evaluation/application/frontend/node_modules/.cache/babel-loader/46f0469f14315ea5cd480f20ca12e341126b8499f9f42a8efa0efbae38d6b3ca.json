{"ast":null,"code":"var _jsxFileName = \"/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/email_evaluation.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Timer from './timer.js';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailEvaluation = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({\n    evaluatorType: '',\n    emailType: ''\n  });\n\n  // Fetch the first email when the component mounts\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n  const fetchNextEmail = () => {\n    // Fetch the next email from your database or API\n    // For example, using axios: axios.get('/api/next-email').then(response => setCurrentEmail(response.data));\n    axios.get('http://127.0.0.1:5000/api/next-email').then(response => {\n      console.log(\"Received email data:\", response.data);\n      setCurrentEmail(response.data);\n    }).catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n  const handleResponse = (field, value) => {\n    setUserResponse({\n      ...userResponse,\n      [field]: value\n    });\n    // Optionally, you can also send this response to your database here\n  };\n  const handleNextEmail = () => {\n    _s();\n    // Save the current response to the database\n    axios.post('http://127.0.0.1:5000/api/save-response', {\n      emailId: currentEmail === null || currentEmail === void 0 ? void 0 : currentEmail.id,\n      response: userResponse\n    }).then(() => {\n      fetchNextEmail();\n      setUserResponse({\n        evaluatorType: '',\n        emailType: ''\n      });\n    }).catch(error => {\n      console.error('Error saving response:', error);\n    });\n    //fetchNextEmail();\n    const [progress, setProgress] = useState(0);\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setProgress(oldProgress => {\n          const newProgress = oldProgress + 10;\n          if (newProgress >= 100) {\n            clearInterval(interval);\n            return 100;\n          }\n          return newProgress;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }, []);\n  };\n  _s(handleNextEmail, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      className: \"email-evaluation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phishing Email Evaluation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          right: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-container\",\n        children: currentEmail ? currentEmail.content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)) : 'Loading email...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"evaluation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Evaluator Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('evaluatorType', 'LLM'),\n            children: \"LLM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('evaluatorType', 'Human'),\n            children: \"Human\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Email Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('emailType', 'Phishing Email'),\n            children: \"Phishing Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse('emailType', 'Real Email'),\n            children: \"Real Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextEmail,\n        children: \"Next Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(EmailEvaluation, \"LelX/9Vs/ufL/KhGGvDTBucTA48=\");\n_c = EmailEvaluation;\nexport default EmailEvaluation;\nvar _c;\n$RefreshReg$(_c, \"EmailEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","Timer","axios","ProgressBar","jsxDEV","_jsxDEV","EmailEvaluation","_s2","_s","$RefreshSig$","currentEmail","setCurrentEmail","userResponse","setUserResponse","evaluatorType","emailType","fetchNextEmail","get","then","response","console","log","data","catch","error","handleResponse","field","value","handleNextEmail","post","emailId","id","progress","setProgress","interval","setInterval","oldProgress","newProgress","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","className","top","right","content","split","map","line","index","Fragment","onClick","_c","$RefreshReg$"],"sources":["/Users/elisefarley/Desktop/Immersion/PhishingEvaluationGame/phishing_evaluation/application/frontend/src/components/email_evaluation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Timer from './timer.js';\nimport axios from 'axios';\nimport ProgressBar from './progress_bar.js';\n\nconst EmailEvaluation = () => {\n  const [currentEmail, setCurrentEmail] = useState(null);\n  const [userResponse, setUserResponse] = useState({ evaluatorType: '', emailType: '' });\n\n  // Fetch the first email when the component mounts\n  useEffect(() => {\n    fetchNextEmail();\n  }, []);\n\n  const fetchNextEmail = () => {\n    // Fetch the next email from your database or API\n    // For example, using axios: axios.get('/api/next-email').then(response => setCurrentEmail(response.data));\n    axios.get('http://127.0.0.1:5000/api/next-email')\n    .then(response => {\n      console.log(\"Received email data:\", response.data);\n      setCurrentEmail(response.data);\n    })\n    .catch(error => {\n      console.error('Error fetching email:', error);\n    });\n  };\n\n  const handleResponse = (field, value) => {\n    setUserResponse({ ...userResponse, [field]: value });\n    // Optionally, you can also send this response to your database here\n  };\n\n  const handleNextEmail = () => {\n    // Save the current response to the database\n    axios.post('http://127.0.0.1:5000/api/save-response', { emailId: currentEmail?.id, response: userResponse })\n      .then(() => {\n        fetchNextEmail();\n        setUserResponse({ evaluatorType: '', emailType: '' });\n      })\n      .catch(error => {\n        console.error('Error saving response:', error);\n      });\n    //fetchNextEmail();\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setProgress((oldProgress) => {\n          const newProgress = oldProgress + 10;\n          if (newProgress >= 100) {\n            clearInterval(interval);\n            return 100;\n          }\n          return newProgress;\n        });\n      }, 1000);\n  \n      return () => clearInterval(interval);\n    }, []);\n  };\n\n  return (\n    <div><ProgressBar progress={progress} />\n    <div style={{ position: 'relative' }} className=\"email-evaluation-container\">\n      <h1>Phishing Email Evaluation</h1>\n      <div style={{ position: 'absolute', top: 0, right: 0 }}>\n        <Timer />\n      </div>\n      {/* <div className=\"email-container\">\n        {currentEmail ? currentEmail.content : 'Loading email...'}\n      </div> */}\n      <div className=\"email-container\">\n        {currentEmail ? \n          currentEmail.content.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              <br />\n            </React.Fragment>\n          ))\n          : 'Loading email...'}\n      </div>\n      <div className=\"evaluation-section\">\n        <div className=\"column\">\n          <h3>Evaluator Type</h3>\n          <button onClick={() => handleResponse('evaluatorType', 'LLM')}>LLM</button>\n          <button onClick={() => handleResponse('evaluatorType', 'Human')}>Human</button>\n        </div>\n        <div className=\"column\">\n          <h3>Email Type</h3>\n          <button onClick={() => handleResponse('emailType', 'Phishing Email')}>Phishing Email</button>\n          <button onClick={() => handleResponse('emailType', 'Real Email')}>Real Email</button>\n        </div>\n      </div>\n      <button onClick={handleNextEmail}>Next Email</button>\n    </div>\n    </div>\n  );\n};\n\nexport default EmailEvaluation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}